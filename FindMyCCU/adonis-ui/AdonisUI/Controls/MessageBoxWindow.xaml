<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AdonisUI.Controls"
                    xmlns:extensions="clr-namespace:AdonisUI.Extensions"
                    xmlns:adonisUi="clr-namespace:AdonisUI"
                    xmlns:converters="clr-namespace:AdonisUI.Converters"
                    xmlns:drawing="clr-namespace:System.Drawing;assembly=System.Drawing"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AdonisUI;component/Controls/AdonisWindow.xaml"/>
    </ResourceDictionary.MergedDictionaries>


    <Style TargetType="{x:Type local:MessageBoxWindow}"
           BasedOn="{StaticResource {x:Type local:AdonisWindow}}">
        <Setter Property="Title" Value="{Binding Caption}"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="ToolWindow"/>
        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
        <Setter Property="ShowInTaskbar" Value="False"/>
        <Setter Property="MinWidth" Value="400"/>
        <Setter Property="MinHeight" Value="60"/>
        <Setter Property="IconVisibility" Value="Collapsed"/>
        <Setter Property="Content" Value="{Binding}"/>
        <Setter Property="MaxRelativeScreenWidth" Value="0.9"/>
        <Setter Property="MaxRelativeScreenHeight" Value="0.9"/>
        <Setter Property="MaxWidthStep" Value="200"/>
        <Setter Property="ButtonStyle">
            <Setter.Value>
                <Style TargetType="Button"
                       BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="MinWidth" Value="78"/>
                    <Setter Property="Margin" Value="0, 0, 12, 0"/>
                    <Setter Property="Padding" Value="{adonisUi:Space 2, 0.5}"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CheckBoxStyle">
            <Setter.Value>
                <Style TargetType="CheckBox"
                       BasedOn="{StaticResource {x:Type CheckBox}}">
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ButtonContainerStyle">
            <Setter.Value>
                <Style TargetType="Border">
                    <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}"/>
                    <Setter Property="extensions:LayerExtension.IncreaseLayer" Value="True"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="18"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="18"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Content -->
                        <Grid Grid.Row="1"
                              Margin="12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!-- Icon -->
                            <Image x:Name="Icon"
                                   Margin="0, 0, 12, 0"
                                   Stretch="Uniform"
                                   MaxHeight="32"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Left"/>

                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!-- Text -->
                                <TextBox Style="{DynamicResource {x:Static adonisUi:Styles.SelectableTextBlockTextBox}}"
                                         Text="{Binding Text}"
                                         TextWrapping="Wrap"
                                         ScrollViewer.VerticalScrollBarVisibility="Auto"/>

                                <ItemsControl x:Name="CheckBoxesBelowTextView"
                                              Grid.Row="1"
                                              ItemsSource="{Binding CheckBoxesBelowTextView, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MessageBoxWindow}}}"
                                              Margin="0, 12, 0, 0"
                                              Focusable="False">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsChecked}"
                                                      Style="{Binding CheckBoxStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MessageBoxWindow}}}"
                                                      Margin="{adonisUi:Space 0, 1, 0, 0}">
                                                <TextBlock Text="{Binding Label}"
                                                           TextWrapping="Wrap"/>
                                            </CheckBox>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                        </Grid>

                        <!-- Buttons -->
                        <Border x:Name="PART_MessageBoxButtonContainer"
                                Grid.Row="3"
                                Style="{Binding ButtonContainerStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MessageBoxWindow}}}">

                            <Grid Margin="30, 12, 6, 12">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <ItemsControl x:Name="CheckBoxesNextToButtonsView"
                                              ItemsSource="{Binding CheckBoxesNextToButtonsView, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MessageBoxWindow}}}"
                                              VerticalAlignment="Center"
                                              Focusable="False">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsChecked}"
                                                      Style="{Binding CheckBoxStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MessageBoxWindow}}}"
                                                      Margin="{adonisUi:Space 0, 0, 2, 0}">
                                                <TextBlock Text="{Binding Label}"
                                                           TextWrapping="Wrap"/>
                                            </CheckBox>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>

                                <ItemsControl Grid.Column="1"
                                              ItemsSource="{Binding Buttons}"
                                              VerticalAlignment="Center"
                                              Focusable="False">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Button Content="{Binding Label}"
                                                    IsDefault="{Binding IsDefault}"
                                                    IsCancel="{Binding IsCancel}"
                                                    Style="{Binding ButtonStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MessageBoxWindow}}}"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <UniformGrid Rows="1"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Grid>
                        </Border>
                    </Grid>

                    <DataTemplate.Triggers>

                        <!--#region Icon Source Triggers-->

                        <DataTrigger Binding="{Binding Icon}" Value="{x:Static local:MessageBoxImage.None}">
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Icon}" Value="{x:Static local:MessageBoxImage.Asterisk}">
                            <Setter Property="Source" TargetName="Icon" Value="{Binding Source={x:Static drawing:SystemIcons.Asterisk}, Converter={x:Static converters:IconToBitmapSourceConverter.Instance}}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Icon}" Value="{x:Static local:MessageBoxImage.Error}">
                            <Setter Property="Source" TargetName="Icon" Value="{Binding Source={x:Static drawing:SystemIcons.Error}, Converter={x:Static converters:IconToBitmapSourceConverter.Instance}}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Icon}" Value="{x:Static local:MessageBoxImage.Exclamation}">
                            <Setter Property="Source" TargetName="Icon" Value="{Binding Source={x:Static drawing:SystemIcons.Exclamation}, Converter={x:Static converters:IconToBitmapSourceConverter.Instance}}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Icon}" Value="{x:Static local:MessageBoxImage.Hand}">
                            <Setter Property="Source" TargetName="Icon" Value="{Binding Source={x:Static drawing:SystemIcons.Hand}, Converter={x:Static converters:IconToBitmapSourceConverter.Instance}}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Icon}" Value="{x:Static local:MessageBoxImage.Information}">
                            <Setter Property="Source" TargetName="Icon" Value="{Binding Source={x:Static drawing:SystemIcons.Information}, Converter={x:Static converters:IconToBitmapSourceConverter.Instance}}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Icon}" Value="{x:Static local:MessageBoxImage.Question}">
                            <Setter Property="Source" TargetName="Icon" Value="{Binding Source={x:Static drawing:SystemIcons.Question}, Converter={x:Static converters:IconToBitmapSourceConverter.Instance}}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Icon}" Value="{x:Static local:MessageBoxImage.Stop}">
                            <Setter Property="Source" TargetName="Icon" Value="{Binding Source={x:Static drawing:SystemIcons.Hand}, Converter={x:Static converters:IconToBitmapSourceConverter.Instance}}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Icon}" Value="{x:Static local:MessageBoxImage.Warning}">
                            <Setter Property="Source" TargetName="Icon" Value="{Binding Source={x:Static drawing:SystemIcons.Warning}, Converter={x:Static converters:IconToBitmapSourceConverter.Instance}}"/>
                        </DataTrigger>

                        <!--#endregion-->

                        <DataTrigger Binding="{Binding HasItems, ElementName=CheckBoxesBelowTextView}" Value="False">
                            <Setter Property="Visibility" TargetName="CheckBoxesBelowTextView" Value="Collapsed"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding HasItems, ElementName=CheckBoxesNextToButtonsView}" Value="False">
                            <Setter Property="Visibility" TargetName="CheckBoxesNextToButtonsView" Value="Collapsed"/>
                        </DataTrigger>

                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>