<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:AdonisUI.Demo.Views"
                    xmlns:viewModels="clr-namespace:AdonisUI.Demo.ViewModels"
                    xmlns:converters="clr-namespace:AdonisUI.Converters;assembly=AdonisUI"
                    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
                    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
                    xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI">

    <DataTemplate DataType="{x:Type viewModels:CollectionDemoViewModel}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="{adonisUi:Space 1}"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.Resources>
                <CollectionViewSource x:Key="DataGridData"
                                      Source="{Binding Items}">
                    <CollectionViewSource.GroupDescriptions>
                        <PropertyGroupDescription PropertyName="Weight"/>
                        <PropertyGroupDescription PropertyName="Name"/>
                    </CollectionViewSource.GroupDescriptions>
                </CollectionViewSource>

                <ControlTemplate x:Key="DataGridTemplate" x:Shared="False">
                    <DataGrid ItemsSource="{Binding Source={StaticResource DataGridData}}"
                              AutoGenerateColumns="False"
                              FrozenColumnCount="1"
                              EnableRowVirtualization="True"
                              EnableColumnVirtualization="True">

                        <DataGrid.Resources>
                            <Style x:Key="CellErrorStyle"
                                   TargetType="{x:Type TextBlock}">
                                <Setter Property="Validation.ErrorTemplate"
                                        Value="{DynamicResource {x:Static adonisUi:Templates.ValidationErrorTemplate}}"/>
                                <Style.Triggers>
                                    <Trigger Property="Validation.HasError" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <SolidColorBrush Color="{DynamicResource {x:Static adonisUi:Colors.ErrorColor}}"
                                                                 Opacity="0.25"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name"
                                                Binding="{Binding Name, ValidatesOnDataErrors=True}"
                                                ElementStyle="{StaticResource CellErrorStyle}"
                                                MinWidth="200"/>

                            <DataGridTextColumn Header="Weight (read-only)"
                                                Binding="{Binding Weight, StringFormat=N2, ValidatesOnDataErrors=True}"
                                                ElementStyle="{StaticResource CellErrorStyle}"
                                                MinWidth="500"
                                                IsReadOnly="True"/>

                            <DataGridTextColumn Header="Weight (editable)"
                                                Binding="{Binding Weight, StringFormat=N2, ValidatesOnDataErrors=True}"
                                                ElementStyle="{StaticResource CellErrorStyle}"
                                                MinWidth="50"/>
                        </DataGrid.Columns>

                        <DataGrid.RowHeaderTemplate>
                            <DataTemplate>
                                <ContentControl ContentTemplate="{DynamicResource {x:Static adonisUi:Icons.AdonisUI}}"
                                                VerticalAlignment="Top"
                                                Width="16"
                                                Height="16"
                                                Margin="{adonisUi:Space 0.5, 0}"
                                                Focusable="False"/>
                            </DataTemplate>
                        </DataGrid.RowHeaderTemplate>

                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <ContentControl ContentTemplate="{DynamicResource {x:Static adonisUi:Icons.AdonisUIGrayscale}}"
                                                    VerticalAlignment="Center"
                                                    Width="48"
                                                    Height="48"
                                                    Focusable="False"/>

                                    <Grid Margin="{adonisUi:Space 2, 1, 0, 1}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="{adonisUi:Space 1}" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.Resources>
                                            <Style x:Key="GridRowLabelStyle"
                                                   TargetType="Label"
                                                   BasedOn="{StaticResource {x:Type Label}}">
                                                <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGridRow}}"/>
                                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                                <Setter Property="Typography.Capitals" Value="SmallCaps"/>
                                            </Style>
                                        </Grid.Resources>

                                        <Label Content="Name"
                                               Style="{StaticResource GridRowLabelStyle}"/>

                                        <TextBlock Text="{Binding Name}"
                                                   Grid.Column="2" />

                                        <Label Content="Weight"
                                               Style="{StaticResource GridRowLabelStyle}"
                                               Grid.Row="1" />

                                        <TextBlock Text="{Binding Weight}"
                                                   Grid.Column="2"
                                                   Grid.Row="1" />

                                        <Label Content="Date"
                                               Style="{StaticResource GridRowLabelStyle}"
                                               Grid.Row="2" />

                                        <TextBlock Text="{Binding Source={x:Static s:DateTime.Now}}"
                                                   Grid.Column="2"
                                                   Grid.Row="2" />
                                    </Grid>
                                </DockPanel>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>

                        <DataGrid.RowValidationRules>
                            <DataErrorValidationRule ValidatesOnTargetUpdated="True" ValidationStep="UpdatedValue" />
                        </DataGrid.RowValidationRules>

                    </DataGrid>
                </ControlTemplate>
            </Grid.Resources>

            <Menu>
                <MenuItem Header="_File">
                    <MenuItem Header="New">
                        <MenuItem Header="File"
                                  InputGestureText="Ctrl+N"/>
                        <MenuItem Header="Directory"
                                  InputGestureText="Ctrl+Shift+N"/>
                    </MenuItem>
                    <MenuItem Header="Open"/>
                    <MenuItem Header="Save"
                              InputGestureText="Ctrl+S"/>
                    <Separator/>
                    <MenuItem Header="Exit"
                              InputGestureText="Alt+F4">
                        <adonisExtensions:MenuItemExtension.IconTemplate>
                            <DataTemplate>
                                <Viewbox>
                                    <ContentControl ContentTemplate="{DynamicResource {x:Static adonisUi:Icons.Error}}"
                                                    Background="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}"
                                                    Foreground="{DynamicResource {x:Static adonisUi:Brushes.AccentForegroundBrush}}"/>
                                </Viewbox>
                            </DataTemplate>
                        </adonisExtensions:MenuItemExtension.IconTemplate>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_Edit">
                    <MenuItem Header="Copy"
                              InputGestureText="Ctrl+C"/>
                    <MenuItem Header="Paste"
                              InputGestureText="Ctrl+V"/>
                </MenuItem>
                <MenuItem Header="_Settings">
                    <MenuItem Header="Option 1"
                              IsChecked="True"/>
                    <MenuItem Header="Option 2"
                              adonisExtensions:MenuItemExtension.IconTemplate="{DynamicResource {x:Static adonisUi:Icons.AdonisUIGrayscale}}"/>
                    <MenuItem Header="Option Group">
                        <MenuItem Header="Option 1"
                                  IsChecked="True"/>
                        <MenuItem Header="Option 2"/>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_Help">
                    <MenuItem Header="About"
                              adonisExtensions:MenuItemExtension.IconTemplate="{DynamicResource {x:Static adonisUi:Icons.AdonisUI}}"/>
                </MenuItem>
            </Menu>

            <Grid Grid.Row="2">

                <TabControl>

                    <TabItem Header="List Box">
                        <ListBox ItemsSource="{Binding Items}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </TabItem>

                    <TabItem Header="Grid View">
                        <ListView ItemsSource="{Binding Items}">
                            <ListView.View>
                                <GridView>
                                    <GridView.Columns>
                                        <GridViewColumn Header="Name"
                                                        DisplayMemberBinding="{Binding Name}"/>
                                        <GridViewColumn Header="Weight"
                                                        DisplayMemberBinding="{Binding Weight, StringFormat=N2}"/>
                                    </GridView.Columns>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>

                    <TabItem Header="Data Grid">
                        <Control Template="{StaticResource DataGridTemplate}"/>
                    </TabItem>


                    <TabItem Header="Tree View">
                        <TreeView ItemsSource="{Binding Items}">
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                    <TextBlock Text="{Binding Name}"/>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                    </TabItem>

                    <TabItem Header="Tab Control">
                        <TabControl>

                            <TabItem Header="List Box">
                                <ListBox ItemsSource="{Binding Items}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </TabItem>

                            <TabItem Header="Grid View">
                                <ListView ItemsSource="{Binding Items}">
                                    <ListView.View>
                                        <GridView>
                                            <GridView.Columns>
                                                <GridViewColumn Header="Name"
                                                        DisplayMemberBinding="{Binding Name}"/>
                                                <GridViewColumn Header="Weight"
                                                        DisplayMemberBinding="{Binding Weight, StringFormat=N2}"/>
                                            </GridView.Columns>
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                            </TabItem>

                            <TabItem Header="Data Grid">
                                <Control Template="{StaticResource DataGridTemplate}"/>
                            </TabItem>

                            <TabItem Header="Tree View">
                                <TreeView ItemsSource="{Binding Items}">
                                    <TreeView.ItemTemplate>
                                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                            <TextBlock Text="{Binding Name}"/>
                                        </HierarchicalDataTemplate>
                                    </TreeView.ItemTemplate>
                                </TreeView>
                            </TabItem>

                        </TabControl>
                    </TabItem>

                </TabControl>

                <Button Command="{Binding AddItemCommand}"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"
                        Height="24"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="+"
                                   FontSize="20"
                                   FontWeight="Bold"
                                   Margin="0, -8, 0, 0"/>
                        
                        <TextBlock Text="Add Item"
                                   Margin="{adonisUi:Space 1, 0, 0, 0}"/>
                    </StackPanel>
                </Button>
            </Grid>

        </Grid>
    </DataTemplate>

</ResourceDictionary>