<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AdonisUI.Controls"
                    xmlns:adonisUi="clr-namespace:AdonisUI"
                    xmlns:extensions="clr-namespace:AdonisUI.Extensions"
                    xmlns:converters="clr-namespace:AdonisUI.Converters">

    <Style x:Key="ButtonPartStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding extensions:CornerRadiusExtension.CornerRadius}"
                                Panel.ZIndex="0"/>

                        <Border x:Name="SpotlightLayer"
                                Background="{TemplateBinding extensions:CursorSpotlightExtension.BackgroundBrush}"
                                BorderBrush="{TemplateBinding extensions:CursorSpotlightExtension.BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding extensions:CornerRadiusExtension.CornerRadius}"
                                extensions:CursorSpotlightExtension.MouseEventSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                SnapsToDevicePixels="False"
                                Panel.ZIndex="1"/>

                        <local:RippleHost x:Name="RippleLayer"
                                          MouseEventSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                          FadeInDuration="{TemplateBinding extensions:RippleExtension.FadeInDuration}"
                                          FadeOutDuration="{TemplateBinding extensions:RippleExtension.FadeOutDuration}"
                                          Background="{TemplateBinding extensions:RippleExtension.BackgroundBrush}"
                                          BorderBrush="{TemplateBinding extensions:RippleExtension.BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          CornerRadius="{TemplateBinding extensions:CornerRadiusExtension.CornerRadius}"
                                          Foreground="{TemplateBinding extensions:RippleExtension.ForegroundBrush}"
                                          Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:IsImmutableFilterConverter.Instance}}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Panel.ZIndex="2"/>

                        <ContentPresenter Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Panel.ZIndex="3"/>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding ContentTemplate, RelativeSource={RelativeSource Self}, Converter={x:Static converters:IsNullToBoolConverter.Instance}}" Value="False">
                            <Setter Property="Panel.ZIndex" TargetName="RippleLayer" Value="4"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}, Converter={x:Static converters:IsImmutableToBoolConverter.Instance}}" Value="True">
                            <Setter Property="Panel.ZIndex" TargetName="RippleLayer" Value="4"/>
                        </DataTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:SplitButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SplitButton}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding extensions:CornerRadiusExtension.CornerRadius}"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0"
                                    Content="{TemplateBinding Content}"
                                    Command="{TemplateBinding Command}"
                                    Padding="{TemplateBinding Padding}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Style="{StaticResource ButtonPartStyle}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                                <extensions:CornerRadiusExtension.CornerRadius>
                                    <MultiBinding Converter="{x:Static converters:ValuesToCornerRadiusConverter.Instance}">
                                        <Binding Path="(extensions:CornerRadiusExtension.CornerRadius).TopLeft" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Source="0"/>
                                        <Binding Source="0"/>
                                        <Binding Path="(extensions:CornerRadiusExtension.CornerRadius).BottomLeft" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </extensions:CornerRadiusExtension.CornerRadius>
                            </Button>

                            <Border Grid.Column="1"
                                    Width="1"
                                    VerticalAlignment="Stretch"
                                    BorderThickness="0"
                                    Margin="0, 4"
                                    Background="{TemplateBinding BorderBrush}"/>

                            <Button x:Name="PART_MenuExpander"
                                    Grid.Column="2"
                                    Foreground="{TemplateBinding Foreground}"
                                    Width="16"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Style="{StaticResource ButtonPartStyle}"
                                    VerticalContentAlignment="Center"
                                    HorizontalContentAlignment="Center"
                                    extensions:RippleExtension.FadeInDuration="0"
                                    extensions:RippleExtension.FadeOutDuration="0"
                                    extensions:RippleExtension.BackgroundBrush="Transparent"
                                    extensions:RippleExtension.BorderBrush="Transparent"
                                    extensions:RippleExtension.ForegroundBrush="{TemplateBinding Foreground}">
                                <extensions:CornerRadiusExtension.CornerRadius>
                                    <MultiBinding Converter="{x:Static converters:ValuesToCornerRadiusConverter.Instance}">
                                        <Binding Source="0"/>
                                        <Binding Path="(extensions:CornerRadiusExtension.CornerRadius).TopRight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(extensions:CornerRadiusExtension.CornerRadius).BottomRight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Source="0"/>
                                    </MultiBinding>
                                </extensions:CornerRadiusExtension.CornerRadius>
                                <Button.ContentTemplate>
                                    <DataTemplate>
                                        <ContentPresenter ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.Expander}}"
                                                          Margin="5, 0"
                                                          HorizontalAlignment="Stretch"
                                                          VerticalAlignment="Stretch"/>
                                    </DataTemplate>
                                </Button.ContentTemplate>
                            </Button>

                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>